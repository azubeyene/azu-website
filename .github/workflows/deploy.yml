name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Prevent overlapping publishes (optional but nice)
concurrency:
  group: pages
  cancel-in-progress: true

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Set your CDN bases here 
env:
  CDN_BASE_BLOG: "https://cdn.example.com/blog/"
  CDN_BASE_PROJ: "https://cdn.example.com/projects/"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Rewrite blog image links (Markdown)
        run: |
          find src/pages/blog -type f -name "*.md" -print0 \
            | xargs -0 perl -pi -e "s#\\!\\[([^\\]]*)\\]\\(\\./_assets/([^\\)]+)\\)#![\$1](${CDN_BASE_BLOG}\$2)#g"
      - name: Rewrite project image links (Markdown)
        run: |
          find src/pages/projects -type f -name "*.md" -print0 \
            | xargs -0 perl -pi -e "s#\\!\\[([^\\]]*)\\]\\(\\./_assets/([^\\)]+)\\)#![\$1](${CDN_BASE_PROJ}\$2)#g"
      - name: Rewrite blog image links (HTML <img> inside MD)
        run: |
          find src/pages/blog -type f -name "*.md" -print0 \
            | xargs -0 perl -pi -e "s#(<img\\s+[^>]*?src=\")\\./_assets/([^\"]+)(\")#\$1${CDN_BASE_BLOG}\$2\$3#g"
      - name: Rewrite project image links (HTML <img> inside MD)
        run: |
          find src/pages/projects -type f -name "*.md" -print0 \
            | xargs -0 perl -pi -e "s#(<img\\s+[^>]*?src=\")\\./_assets/([^\"]+)(\")#\$1${CDN_BASE_PROJ}\$2\$3#g"
      - name: Verify no local _assets links remain
        run: |
          if grep -R "(/|\()\\./_assets/" src/pages; then
            echo "Found local _assets references after rewrite"; exit 1;
          fi
      - name: Build (Astro)
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4